@mixin font-smoothing($value: on) {
  @if $value == on {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

@mixin btn-gradient($bg-start, $bg-end: darken($bg-start, 15%)) {
  &::before {
    background-image: linear-gradient(150deg, $bg-start -1%, $bg-end 101%);
    background-repeat: repeat-x;
  }

  &::after {
    background-image: linear-gradient(150deg, $bg-end -1%, $bg-start 101%);
    background-repeat: repeat-x;
    opacity: 0;
  }
}

@mixin bg-gradient($bg-start, $bg-end: darken($bg-start, 15%)) {
  background-image: linear-gradient(150deg, $bg-start 35%, $bg-end 65%);
}

@mixin btn-mega-colors($bg-start, $bg-end: darken($bg-start, 15%)) {
  &::before {
    background-color: $bg-start;
  }

  &::after {
    background-color: $bg-end;
    opacity: 0;
  }
}

@mixin full-width {
  width: 100vw;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}

// Adds responsive sizing classes, e.g. w-md-50 for 50% width at md breakpoint
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    @each $prop, $abbrev in (width: w, height: h) {
      @each $size, $length in $sizes {
        .#{$abbrev}#{$infix}-#{$size} {
          #{$prop}: $length !important;
        }
      }
    }
  }
}
